{"ast":null,"code":"var _jsxFileName = \"/home/user/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/\\u0420\\u0430\\u0431\\u043E\\u0442\\u0430 \\u0443\\u0447\\u0435\\u0431\\u0430/React-Redax-Store/care-store/src/pages/catalog.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\nimport { fetchGoods } from '../store/actions/goodActions';\nimport { CatalogItem } from '../components/catalogItem';\nimport { FilterPanel } from '../components/filterPanel';\nimport { MainTop } from '../components/mainTop';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ITEMS_PER_PAGE = 6;\nexport function Catalog() {\n  _s();\n  const dispatch = useAppDispatch();\n  const {\n    error,\n    loading,\n    goods\n  } = useAppSelector(state => state.good);\n  const [page, setPage] = useState(0);\n  const pageCount = Math.ceil(goods.length / ITEMS_PER_PAGE);\n  const pageChangeHandler = selected => {\n    setPage(selected);\n  };\n  useEffect(() => {\n    dispatch(fetchGoods(page + 1, ITEMS_PER_PAGE));\n  }, [page, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(MainTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(FilterPanel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"catalog-list\",\n        children: goods.map(el => /*#__PURE__*/_jsxDEV(CatalogItem, {\n          good: el\n        }, el.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      breakLabel: \"...\",\n      nextLabel: \"\",\n      onPageChange: pageChangeHandler,\n      pageRangeDisplayed: 5,\n      pageCount: pageCount,\n      previousLabel: \"\",\n      forcePage: page,\n      containerClassName: \"pagination-conainer list\",\n      pageClassName: \"pagination-item\",\n      previousLinkClassName: \"pag-prev-arrow\",\n      nextLinkClassName: \"pag-next-arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Catalog, \"AvF6mbzi711JdoNQV/jR3+871Vs=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = Catalog;\nvar _c;\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"names":["React","useEffect","useState","useAppDispatch","useAppSelector","fetchGoods","CatalogItem","FilterPanel","MainTop","ReactPaginate","jsxDEV","_jsxDEV","ITEMS_PER_PAGE","Catalog","_s","dispatch","error","loading","goods","state","good","page","setPage","pageCount","Math","ceil","length","pageChangeHandler","selected","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","id","breakLabel","nextLabel","onPageChange","pageRangeDisplayed","previousLabel","forcePage","containerClassName","pageClassName","previousLinkClassName","nextLinkClassName","_c","$RefreshReg$"],"sources":["/home/user/Документы/Работа учеба/React-Redax-Store/care-store/src/pages/catalog.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../hooks/redux';\nimport { fetchGoods } from '../store/actions/goodActions';\nimport { CatalogItem } from '../components/catalogItem';\nimport { FilterPanel } from '../components/filterPanel';\nimport { MainTop } from '../components/mainTop';\nimport ReactPaginate from 'react-paginate';\n\nconst ITEMS_PER_PAGE = 6;\n\nexport function Catalog() {\n  const dispatch = useAppDispatch();\n  const { error, loading, goods } = useAppSelector((state) => state.good);\n  const [page, setPage] = useState(0);\n  const pageCount = Math.ceil(goods.length / ITEMS_PER_PAGE);\n  const pageChangeHandler = (selected: { selected: number }) => {\n    setPage(selected);\n  };\n\n  useEffect(() => {\n    dispatch(fetchGoods(page + 1, ITEMS_PER_PAGE));\n  }, [page, dispatch]);\n\n  return (\n    <main className='main'>\n      <MainTop />\n      {error && <p className='text-error'>{error}</p>}\n      {loading && <p className='text-loading'>Loading...</p>}\n      <div className='main-content'>\n        <FilterPanel />\n        <div className='catalog-list'>\n          {goods.map((el) => (\n            <CatalogItem key={el.id} good={el} />\n          ))}\n        </div>\n      </div>\n      <ReactPaginate\n        breakLabel='...'\n        nextLabel=''\n        onPageChange={pageChangeHandler}\n        pageRangeDisplayed={5}\n        pageCount={pageCount}\n        previousLabel=''\n        forcePage={page}\n        containerClassName='pagination-conainer list'\n        pageClassName='pagination-item'\n        previousLinkClassName='pag-prev-arrow'\n        nextLinkClassName='pag-next-arrow'\n      />\n    </main>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}