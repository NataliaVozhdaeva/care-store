{"ast":null,"code":"import { goodSlice } from '../slices/goodSlice';\nexport const fetchGoods = function () {\n  let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  let count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n  return async dispatch => {\n    try {\n      /* dispatch(goodSlice.actions.fetching());\n      const response = await axios.get<ServerResponse<IGood>>('goods.json', {\n        params: { page, count },\n      });\n      dispatch(goodSlice.actions.fetchSucsess(response.data.results)); */\n      console.log(responce);\n    } catch (e) {\n      dispatch(goodSlice.actions.fetchError(e));\n    }\n  };\n};","map":{"version":3,"names":["goodSlice","fetchGoods","page","arguments","length","undefined","count","dispatch","console","log","responce","e","actions","fetchError"],"sources":["/home/user/Документы/Работа учеба/React-Redax-Store/care-store/src/store/actions/goodActions.ts"],"sourcesContent":["import { AppDispatch } from '../index';\nimport { IGood, ServerResponse } from '../../models/models';\nimport axios from '../../axios';\nimport { goodSlice } from '../slices/goodSlice';\n\nexport const fetchGoods = (page: number = 1, count: number = 6) => {\n  return async (dispatch: AppDispatch) => {\n    try {\n      /* dispatch(goodSlice.actions.fetching());\n      const response = await axios.get<ServerResponse<IGood>>('goods.json', {\n        params: { page, count },\n      });\n      dispatch(goodSlice.actions.fetchSucsess(response.data.results)); */\n      console.log(responce);\n    } catch (e) {\n      dispatch(goodSlice.actions.fetchError(e as Error));\n    }\n  };\n};\n"],"mappings":"AAGA,SAASA,SAAS,QAAQ,qBAAqB;AAE/C,OAAO,MAAMC,UAAU,GAAG,SAAAA,CAAA,EAAyC;EAAA,IAAxCC,IAAY,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,IAAEG,KAAa,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAC5D,OAAO,MAAOI,QAAqB,IAAK;IACtC,IAAI;MACF;AACN;AACA;AACA;AACA;MACMC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;IACvB,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVJ,QAAQ,CAACP,SAAS,CAACY,OAAO,CAACC,UAAU,CAACF,CAAC,CAAU,CAAC;IACpD;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}