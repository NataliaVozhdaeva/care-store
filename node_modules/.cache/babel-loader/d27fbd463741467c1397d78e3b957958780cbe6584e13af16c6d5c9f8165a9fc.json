{"ast":null,"code":"import axios from '../../axios';\nimport { goodSlice } from '../slices/goodSlice';\nexport const fetchGoods = function () {\n  let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  let count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n  return async dispatch => {\n    try {\n      dispatch(goodSlice.actions.fetching());\n      /*  const response = await axios.get<ServerResponse<IGood>>('goods.json', {\n        params: { page, count },\n      });\n      dispatch(goodSlice.actions.fetchSucsess(response.data.results)); */\n      const response = await axios.get(`goods.json?count=${count}&page=${page}`);\n      dispatch(goodSlice.actions.airportFetchingSuccess({\n        airports: response.data.results,\n        count: response.data.count\n      }));\n    } catch (e) {\n      dispatch(goodSlice.actions.fetchError(e));\n    }\n  };\n};","map":{"version":3,"names":["axios","goodSlice","fetchGoods","page","arguments","length","undefined","count","dispatch","actions","fetching","response","get","airportFetchingSuccess","airports","data","results","e","fetchError"],"sources":["/home/user/Документы/Работа учеба/React-Redax-Store/care-store/src/store/actions/goodActions.ts"],"sourcesContent":["import { AppDispatch } from '../index';\nimport { IGood, ServerResponse } from '../../models/models';\nimport axios from '../../axios';\nimport { goodSlice } from '../slices/goodSlice';\n\nexport const fetchGoods = (page = 1, count = 6) => {\n  return async (dispatch: AppDispatch) => {\n    try {\n      dispatch(goodSlice.actions.fetching());\n      /*  const response = await axios.get<ServerResponse<IGood>>('goods.json', {\n        params: { page, count },\n      });\n      dispatch(goodSlice.actions.fetchSucsess(response.data.results)); */\n      const response = await axios.get<ServerResponse<IGood>>(`goods.json?count=${count}&page=${page}`);\n      dispatch(\n        goodSlice.actions.airportFetchingSuccess({\n          airports: response.data.results,\n          count: response.data.count,\n        })\n      );\n    } catch (e) {\n      dispatch(goodSlice.actions.fetchError(e as Error));\n    }\n  };\n};\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,aAAa;AAC/B,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,OAAO,MAAMC,UAAU,GAAG,SAAAA,CAAA,EAAyB;EAAA,IAAxBC,IAAI,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,IAAEG,KAAK,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAC5C,OAAO,MAAOI,QAAqB,IAAK;IACtC,IAAI;MACFA,QAAQ,CAACP,SAAS,CAACQ,OAAO,CAACC,QAAQ,EAAE,CAAC;MACtC;AACN;AACA;AACA;MACM,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAyB,oBAAmBL,KAAM,SAAQJ,IAAK,EAAC,CAAC;MACjGK,QAAQ,CACNP,SAAS,CAACQ,OAAO,CAACI,sBAAsB,CAAC;QACvCC,QAAQ,EAAEH,QAAQ,CAACI,IAAI,CAACC,OAAO;QAC/BT,KAAK,EAAEI,QAAQ,CAACI,IAAI,CAACR;MACvB,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOU,CAAC,EAAE;MACVT,QAAQ,CAACP,SAAS,CAACQ,OAAO,CAACS,UAAU,CAACD,CAAC,CAAU,CAAC;IACpD;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}