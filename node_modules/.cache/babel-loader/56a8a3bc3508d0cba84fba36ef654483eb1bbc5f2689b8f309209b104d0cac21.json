{"ast":null,"code":"import axios from '../../axios';\nimport { goodSlice } from '../slices/goodSlice';\nexport const fetchGoods = ( /* page: number = 1, count: number = 6 */\n) => {\n  return async dispatch => {\n    try {\n      dispatch(goodSlice.actions.fetching());\n      const response = await axios.get('goods.json', {\n        /* params: { page, count }, */\n      });\n      dispatch(goodSlice.actions.fetchSucsess({\n        goods: response.data.results\n        /* count: response.data.count */\n      }));\n    } catch (e) {\n      dispatch(goodSlice.actions.fetchError(e));\n    }\n  };\n};","map":{"version":3,"names":["axios","goodSlice","fetchGoods","dispatch","actions","fetching","response","get","fetchSucsess","goods","data","results","e","fetchError"],"sources":["/home/user/Документы/Работа учеба/React-Redax-Store/care-store/src/store/actions/goodActions.ts"],"sourcesContent":["import { AppDispatch } from '../index';\nimport { IGood, ServerResponse } from '../../models/models';\nimport axios from '../../axios';\nimport { goodSlice } from '../slices/goodSlice';\n\nexport const fetchGoods = (/* page: number = 1, count: number = 6 */) => {\n  return async (dispatch: AppDispatch) => {\n    try {\n      dispatch(goodSlice.actions.fetching());\n      const response = await axios.get<ServerResponse<IGood>>('goods.json', {\n        /* params: { page, count }, */\n      });\n      dispatch(\n        goodSlice.actions.fetchSucsess({\n          goods: response.data.results,\n          /* count: response.data.count */\n        })\n      );\n    } catch (e) {\n      dispatch(goodSlice.actions.fetchError(e as Error));\n    }\n  };\n};\n"],"mappings":"AAEA,OAAOA,KAAK,MAAM,aAAa;AAC/B,SAASC,SAAS,QAAQ,qBAAqB;AAE/C,OAAO,MAAMC,UAAU,GAAGA,CAAA,CAAC;AAAA,KAA8C;EACvE,OAAO,MAAOC,QAAqB,IAAK;IACtC,IAAI;MACFA,QAAQ,CAACF,SAAS,CAACG,OAAO,CAACC,QAAQ,EAAE,CAAC;MACtC,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAwB,YAAY,EAAE;QACpE;MAAA,CACD,CAAC;MACFJ,QAAQ,CACNF,SAAS,CAACG,OAAO,CAACI,YAAY,CAAC;QAC7BC,KAAK,EAAEH,QAAQ,CAACI,IAAI,CAACC;QACrB;MACF,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVT,QAAQ,CAACF,SAAS,CAACG,OAAO,CAACS,UAAU,CAACD,CAAC,CAAU,CAAC;IACpD;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}